version: '3.1'

services:
  linuxfr.org:
    build:
      context: .
      dockerfile: deployment/linuxfr.org/Dockerfile
    env_file:
      - deployment/default.env
    volumes:
      # Share host directories so, the developer can edit them
      # and see the result without need to restart the container
      - type: bind
        source: ./app
        target: /linuxfr.org/app
      - type: bind
        source: ./db
        target: /linuxfr.org/db
      - type: bind
        source: ./public
        target: /linuxfr.org/public
      # uploads are shared with the nginx service
      - data-uploads:/linuxfr.org/uploads
    tmpfs:
      - /linuxfr.org/public/tmp:size=100M
    depends_on:
      - database
      - database-test
      - redis

  linuxfr-board:
    build:
      context: deployment/linuxfr-board
    env_file:
      - deployment/default.env
    depends_on:
      - redis

  linuxfr-img:
    build:
      context: deployment/linuxfr-img
    env_file:
      - deployment/default.env
    depends_on:
      - redis
    volumes:
      - cache-img:/linuxfr-img/cache

  nginx:
    image: nginx:stable
    env_file:
      - deployment/default.env
    volumes:
      - type: bind
        source: ./deployment/nginx/templates
        target: /etc/nginx/templates
      - type: bind
        source: ./public/fonts
        target: /var/linuxfr/fonts
      - data-uploads:/var/linuxfr/uploads
    ports:
      - "80:80"
    depends_on:
      - linuxfr.org
      - linuxfr-board
      - linuxfr-img

  database:
    image: mariadb:10.7
    env_file:
      - deployment/default.env
    restart: always
    volumes:
      - data-database:/var/lib/mysql

  database-test:
    image: mariadb:10.7
    env_file:
      - deployment/default.env
    entrypoint: ["/linuxfr-entrypoint.sh"]
    command: ["mysqld"]
    restart: always
    volumes:
      - data-database-test:/var/lib/mysql
      - type: bind
        source: ./deployment/database-test/entrypoint.sh
        target: /linuxfr-entrypoint.sh

  redis:
    image: redis:6
    restart: always
    volumes:
      - data-redis:/data

volumes:
  data-database:
    driver: local
  data-database-test:
    driver: local
  data-redis:
    driver: local
  data-uploads:
    driver: local
  cache-img:
    driver: local

