= javascript_include_tag "sorttable"

%main#contents.statistics(role="main")
  =h1 "Statistiques sur la modération"
  - width_stats = 400

  .body
    %strong
      Statistiques mises à jour le #{l Time.now}
    %p= link_to("Retour à l'ensemble des statistiques", "/statistiques")
    %p
      Voir aussi #{link_to "les règles de modération", "/regles_de_moderation"}

    %h2 Sommaire
    %ul
      %li= link_to("Jour de modération","#jour")
      %li= link_to("Critères de modération d'une dépêche", "#criteres")
      %li= link_to("Temps d'édition et de modération d'une dépêche", "#temps_depeches")
      %li= link_to("Actes de modération","#actes")
      %li= link_to("Modération a priori des dépêches", "#apriori_news")

    %h2#criteres Critères de modération d'une dépêche
    %ul
      %li +1 par avis positif et -1 par avis négatif
      %li Seuil d'acceptation = #{News.accept_threshold}
      %li Seuil de refus = #{News.refuse_threshold}

    - if @stats.by_day.any?
      - maxval = @stats.by_day.map {|a| a["cnt"] }.max
      %h2#temps_depeches Jour de modération
      %table
        %tr
          %th Contenu
          %th Jour
          %th Nombre de modération
        - @stats.by_day.each do |day|
          %tr
            - contentclass = "content#{day["type"].downcase()}"
            %td
              .stat.stats100px(class="#{contentclass}") #{translate_content_type(day["type"])}
            %td.stat(class="#{contentclass}")= day_name day["day"]
            %td
              .stat(class="#{contentclass}" style="width: #{(width_stats * day["cnt"] / maxval).to_i}px;")= day["cnt"]

      %h2#temps_depeches Temps d'édition et de modération d'une dépêche
      %p
        Temps passé entre la création d'une dépêche (temps d'édition compris) et sa modération finale&nbsp;:
      %table.sortable
        %tr
          %th Année
          %th Médiane (h)
          %th 95e percentile (h)
          %th Moyenne (h)
          %th Écart-type (h)
          %th Minimum (min)
          %th Maximum (h)
        - @stats.average_time.each do |avg|
          - if avg["cnt"] > 0
            %tr
              %td.stat= avg["year"]
              %td.stat= (@stats.median_time(avg["year"],avg["cnt"],0.50)/3600)
              %td.stat= (@stats.median_time(avg["year"],avg["cnt"],0.95)/3600)
              %td.stat= (avg["duration"]/(avg["cnt"]*3600)).to_i
              %td.stat= (avg["std"]/3600).to_i
              %td.stat= (avg["min"]/60).to_i
              %td.stat= (avg["max"]/3600).to_i
          - else
            aucune information disponible

    %h2#actes Actes de modération
    - if @stats.acts_by_year.any?
      - maxval = @stats.acts_by_year.values.map(&:values).flatten.max
      %table
        %tr
          %th Année
          %th Acte
          %th Nombre
        - @stats.acts_by_year.each do |year,act|
          - newyear = true
          - act.each do |description,cnt|
            %tr
              - if newyear
                %td{'class' => 'stat','rowspan' => act.count}= year
                - newyear = false
              %td.stat #{description}
              %td
                .stat(class="stat" style="width: #{(width_stats * cnt / maxval).to_i}px;")= cnt

    %h2#apriori_news Modération a priori des dépêches
    %ul
      %li= link_to("Sur les derniers jours", "#moderation")
      %li= link_to("Depuis Epoch ou le début des données", "#moderationEpoch")

    %p Sur l'année, en #{pluralize Date.today.yday, "jour"} :
    %ul
      %li
        - extra = @stats.news_by_day * 365 / Date.today.yday()
        = "#{pluralize @stats.news_by_day, "dépêche publiée", "dépêches publiées"} (extrapolation annuelle de #{extra} pour un objectif de #{@goals.news_by_year} "
        - if (extra >= @goals.news_by_year)
          = image_tag "/images/icones/check.svg", alt: "Objectif atteint", title: "Objectif atteint", width: "16px"
        \)
      %li
        - extra2 = @stats.amr_news_by_day * 365 / Date.today.yday()
        = "#{pluralize @stats.amr_news_by_day, "dépêche publiée écrite", "dépêches publiées écrites"} par l'équipe du site (extrapolation annuelle de #{extra2} pour un objectif de #{@goals.amr_news_by_year} "
        - if (extra2 >= @goals.amr_news_by_year)
          = image_tag "/images/icones/check.svg", alt: "Objectif atteint", title: "Objectif atteint", width: "16px"
        \)

    %h3#moderation Sur les derniers jours

    %p Il y a eu #{pluralize @stats.moderated_news(7), "dépêche modérée", "dépêches modérées"} (acceptation ou rejet) sur les 7 derniers jours, et #{pluralize @stats.moderated_news(31), "dépêche modérée", "dépêches modérées"} sur les 31 derniers jours.

    - if Account.amr.any?
      %h4 Équipe de modération actuelle (#{Account.amr.count})
      %table.sortable
        %tr
          %th
          %th Modérations (7j)
          %th Modérations (31j)
          %th Éditions (7j)
          %th Éditions (31j)
          %th Votes (31j)
          %th Dernière dépêche
          %th.sorttable_numeric Auteur de dépêches
        - Account.amr.each do |user|
          %tr
            %td.stat= link_to user["login"], user.user
            %td.stat= @stats.nb_moderations_x_days(user["user_id"],7)
            %td.stat= @stats.nb_moderations_x_days(user["user_id"],31)
            %td.stat= @stats.nb_editions_x_days(user["user_id"],7)
            %td.stat= @stats.nb_editions_x_days(user["user_id"],31)
            %td.stat= @stats.nb_votes_last_month(user["login"])
            - @stats.last_news_at(user["user_id"]).each do |last|
              %td.stat= last["last"]
            - @stats.news_by_week(user["user_id"]).each do |news|
              %td.stat
                = "#{news["cnt"]} en #{pluralize news["weeks"], "semaine"}"
                - if news["cnt"] >= news["weeks"] * @goals.each_amr_news_by_week
                  = image_tag "/images/icones/check.svg", alt: "Objectif atteint", title: "Objectif atteint", width: "16px"

    - else
      %h4 Pas d'équipe de modération actuellement

    %h3#moderationEpoch Depuis Epoch ou le début des données

    - if @stats.top_amr.any?
      %h4 Membre passé ou présent de l'équipe de modération (#{@stats.top_amr.count})
      %table.sortable
        %tr
          %th
          %th Modérations
          %th Votes
          %th Éditions
        - @stats.top_amr.each do |user|
          %tr
            %td.stat= link_to user["login"], User.find(user["moderator_id"])
            %td.stat= user["cnt"].to_i
            %td.stat= @stats.nb_votes(user["login"])
            %td.stat= @stats.nb_editions_x_days(user["moderator_id"])
    - else
      %h4 Pas encore d'équipe de modération
